const base_url="https://www.pixiv.net";
const puppeteer = require('puppeteer');
const request = require('request');
const readline = require('readline');
const fs = require('fs');
const autoSearchObj = require('/Users/edmundchan/Desktop/java/pixiv/mavenproject/js/autoScrapAccount.js');
const chrome = require('chrome-cookies-secure');
//global browser var
var globalBrowser ; 
var cookies_store ; 
function ScrapArtist()
{const getCookies = (callback) => {
    chrome.getCookies(base_url, 'puppeteer', function(err, cookies) {
        if (err) {
            console.log(err, 'error');
            return
        }
        console.log(cookies, 'cookies');
        callback(cookies);
    }, 'Profile 6') // e.g. 'Profile 2'
}

// find profiles at ~/Library/Application Support/Google/Chrome


const herf =  getCookies(async (cookies) => {

    const browser = await puppeteer.launch({
        headless: false
    });
    const page = await browser.newPage();

    await page.setCookie(...cookies);
   
    await page.setExtraHTTPHeaders({referer: "https://www.pixiv.net/"});
    

    
 

});
}
// /https://i.pximg.net/img-original/img/2021/10/31/00/00/15/93790924_p0.png
//method convertFromFile 
//convert file generated by autoSearchArtist to source file to array 
  function convertFromFile(fileName)
{
    //heplerFun_correctLink convert url to appropriate page number 
    //http://*p0 ==> http://*p1 if num =1 
    const heplerFun_correctLink = (str,num)=>{

        var  to_return =str.substring(0,str.length-5);
        return to_return+num+".png";
    }
  
    
    //read file 
    //create readInterface + implement them into array 
    const readInterface = readline.createInterface({
        input: fs.createReadStream(fileName),
        console: false
    });

    readInterface.on('line', function(line) {
                let text , num , sourceLink  , name ; 

                console.log(line);
                //split the file line to appropriate array 
                  text = line.split(" ");
                //number of picture in gallery
                  num = text[4];
                //sourceLink
                 sourceLink = text[3];
                //name
                 name=text[1];
                 
                    for(let i = 0 ; i< num ;i++)
                    {
                        //destUrl is the url be passed to download 
                        const destUrl = heplerFun_correctLink(sourceLink,i); 
                        download(destUrl,i,name);
                    }


                // console.log("line: "+ countRow);
                });

}

/*
collection : Name of gallery
num : page of artwork of gallery
url : destiny url , should be source file 
*/
function download(url,num,collection)
{
    const options = {
        url: url ,
        headers: {
            'referer': 'https://www.pixiv.net/'
          }
        };
        //check if folder exist or not , usually does not exist 
        if (!fs.existsSync("./"+collection)){
            fs.mkdirSync("./"+collection);
        }
         request(options).pipe(fs.createWriteStream("./"+collection+"/"+num+".jpg"));
}
console.log (convertFromFile('/Users/edmundchan/Desktop/java/pixiv/mavenproject/js/data/test'));
